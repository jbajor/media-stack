version: "3.9"
services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/sonarr:/config
      - ${DATA_ROOT}/tv:/tv
      - ${DATA_ROOT}/downloads:/config/Downloads
    restart: always
    ports:
      - "8989:8989"
    labels:
      - homepage.group=Media
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=http://${HOSTNAME}:8989
      - homepage.description=Series management
      - homepage.weight=2
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989/
      - homepage.widget.key=${SONARR_API_KEY}
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/radarr:/config
      - ${DATA_ROOT}/movies:/movies
      - ${DATA_ROOT}/downloads:/config/Downloads
    restart: always
    ports:
      - "7878:7878"
    labels:
      - homepage.group=Media
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=http://${HOSTNAME}:7878
      - homepage.description=Movies management
      - homepage.weight=3
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API_KEY}
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_ROOT}/sabnzbd:/config
      - ${DATA_ROOT}/downloads:/config/Downloads
    restart: always
    ports:
      - "8080:8080"
    labels:
      - homepage.group=Download
      - homepage.name=Sabnzbd
      - homepage.icon=sabnzbd.png
      - homepage.href=http://${HOSTNAME}:8080
      - homepage.description=Usenet
      - homepage.weight=1
      - homepage.widget.type=sabnzbd
      - homepage.widget.key=${SABNZBD_API_KEY}
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${HOSTNAME}/jellyfin
    volumes:
      - ${CONFIG_ROOT}/jellyfin:/config
      - ${DATA_ROOT}/tv:/tv
      - ${DATA_ROOT}/movies:/movies
    ports:
      - "8096:8096"
      - "7359:7359/udp"
      - "1900:1900/udp"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    restart: always
    labels:
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=jellyfin.png
      - homepage.href=http://${HOSTNAME}:8096
      - homepage.description=Media server
      - homepage.weight=0
      - homepage.widget.type=jellyfin
      - homepage.widget.url=http://jellyfin:8096
      - homepage.widget.key=${JELLYFIN_API_KEY}
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - TZ=${TIMEZONE}
      - PORT=5055
    ports:
      - 5055:5055
    volumes:
      - ${CONFIG_ROOT}/jellyseerr:/app/config
    restart: always
    labels:
      - homepage.group=Media
      - homepage.name=Jellyseerr
      - homepage.icon=jellyseerr.png
      - homepage.href=http://${HOSTNAME}:5055
      - homepage.description=Media discovery
      - homepage.weight=1
      - homepage.widget.type=jellyseerr
      - homepage.widget.url=http://jellyseerr:5055
      - homepage.widget.key=${JELLYSEERR_API_KEY}
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    environment:
      - HOMEPAGE_VAR_TITLE=${HOMEPAGE_VAR_TITLE}
      - HOMEPAGE_VAR_SEARCH_PROVIDER=${HOMEPAGE_VAR_SEARCH_PROVIDER}
      - HOMEPAGE_VAR_HEADER_STYLE=${HOMEPAGE_VAR_HEADER_STYLE}
      - HOMEPAGE_VAR_WEATHER_CITY=${HOMEPAGE_VAR_WEATHER_CITY}
      - HOMEPAGE_VAR_WEATHER_LAT=${HOMEPAGE_VAR_WEATHER_LAT}
      - HOMEPAGE_VAR_WEATHER_LONG=${HOMEPAGE_VAR_WEATHER_LONG}
      - HOMEPAGE_VAR_WEATHER_TIME=${TIMEZONE}
      - HOMEPAGE_VAR_WEATHER_UNIT=${HOMEPAGE_VAR_WEATHER_UNIT}
    volumes:
      - ${CONFIG_ROOT}/homepage:/app/config
      - ./homepage/tpl:/app/config/tpl
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_ROOT}:/data
    restart: always
    command: [sh, -c, "cp -n /app/config/tpl/*.yaml /app/config && node server.js"]
    ports:
      - "80:3000"
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    environment:
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
networks:
  default:
    name: media-stack